#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <dirent.h>
#include <sys/stat.h>

int main() {
    long min_size;
    struct dirent *entry;
    struct stat file_stat;
    printf("Enter minimum file size in bytes: ");
    scanf("%ld", &min_size);
    DIR *dir = opendir(".");
    if (!dir) {
        perror("Error opening directory");
        return 1;
    }
    printf("Files larger than %ld bytes:\n", min_size);
    while ((entry = readdir(dir)) != NULL) {
        // Skip directories
        if (entry->d_type == DT_DIR) {
            continue;
        }
        if (stat(entry->d_name, &file_stat) == -1) {
            perror("Error getting file information");
            continue;
        }
        if (file_stat.st_size > min_size) {
            printf("%s (%ld bytes)\n", entry->d_name, file_stat.st_size);
        }
    }
    closedir(dir);
    return 0;
}

Q2
#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <time.h>

void print_permissions(mode_t mode) {
    printf("Permissions: ");
    printf((mode & S_IRUSR) ? "r" : "-");
    printf((mode & S_IWUSR) ? "w" : "-");
    printf((mode & S_IXUSR) ? "x" : "-");
    printf((mode & S_IRGRP) ? "r" : "-");
    printf((mode & S_IWGRP) ? "w" : "-");
    printf((mode & S_IXGRP) ? "x" : "-");
    printf((mode & S_IROTH) ? "r" : "-");
    printf((mode & S_IWOTH) ? "w" : "-");
    printf((mode & S_IXOTH) ? "x" : "-");
    printf("\n");
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s <filename>\n", argv[0]);
        return 1;
    }
    struct stat file_stat;
    if (stat(argv[1], &file_stat) == -1) {
        perror("Error getting file information");
        return 1;
    }
    printf("File: %s\n", argv[1]);
    printf("Inode Number: %ld\n", (long)file_stat.st_ino);
    printf("Number of Hard Links: %ld\n", (long)file_stat.st_nlink);
    printf("File Size: %ld bytes\n", (long)file_stat.st_size);
    printf("Block Size: %ld bytes\n", (long)file_stat.st_blksize);
    printf("Number of Blocks: %ld\n", (long)file_stat.st_blocks);

    print_permissions(file_stat.st_mode);
    printf("Last Access Time: %s", ctime(&file_stat.st_atime));
    printf("Last Modification Time: %s", ctime(&file_stat.st_mtime));
    printf("Last Status Change Time: %s", ctime(&file_stat.st_ctime));
    return 0;
}
