Q1
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>

int main() {
    pid_t pid;
    int status;
    pid = fork();
    if (pid == -1) {
        perror("fork failed");
        exit(EXIT_FAILURE);
    }

    if (pid == 0) {
        printf("Child process: My PID is %d\n", getpid());
        exit(42);
    } else {
        waitpid(pid, &status, 0);
        if (WIFEXITED(status)) {
            printf("Parent process: Child terminated normally with exit status %d\n", WEXITSTATUS(status));
        } else {
            printf("Parent process: Child did not terminate normally.\n");
        }
    }
    return 0;
}

Q2

