Q1
#include <stdio.h>
#include <stdlib.h>
#include <sys/resource.h>

void get_limit(int resource, const char *resource_name) {
    struct rlimit limit;
    if (getrlimit(resource, &limit) == -1) {
        perror("getrlimit");
        exit(EXIT_FAILURE);
    }
    printf("%s limits: Soft limit = %ld, Hard limit = %ld\n",
           resource_name, (long)limit.rlim_cur, (long)limit.rlim_max);
}

void set_limit(int resource, const char *resource_name, rlim_t new_limit) {
    struct rlimit limit;
    if (getrlimit(resource, &limit) == -1) {
        perror("getrlimit");
        exit(EXIT_FAILURE);
    }
    limit.rlim_cur = new_limit;
    if (setrlimit(resource, &limit) == -1) {
        perror("setrlimit");
        exit(EXIT_FAILURE);
    }

    printf("Updated %s soft limit to %ld\n", resource_name, (long)new_limit);
}

int main() {
    get_limit(RLIMIT_NOFILE, "Max number of open files (RLIMIT_NOFILE)");
    get_limit(RLIMIT_AS, "Max memory (virtual address space) (RLIMIT_AS)");

    set_limit(RLIMIT_NOFILE, "Max number of open files (RLIMIT_NOFILE)", 1024);
    set_limit(RLIMIT_AS, "Max memory (RLIMIT_AS)", 512 * 1024 * 1024);  // 512 MB

    get_limit(RLIMIT_NOFILE, "Max number of open files (RLIMIT_NOFILE)");
    get_limit(RLIMIT_AS, "Max memory (virtual address space) (RLIMIT_AS)");
    return 0;
}

Q2
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    int filefd;

    filefd = open("output.txt", O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (filefd == -1) {
        perror("open");
        exit(EXIT_FAILURE);
    }
    if (dup2(filefd, STDOUT_FILENO) == -1) {
        perror("dup2");
        close(filefd);
        exit(EXIT_FAILURE);
    }

    close(filefd);
    printf("This message will be written to output.txt\n");
    printf("Another line redirected to output.txt\n");
    return 0;
}
