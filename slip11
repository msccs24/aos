Q1
#include<stdio.h>
#include<fcntl.h>
#include<sys/types.h>
#include<errno.h>

int main()
{
   struct rlimit old_lim,lim,new_lim;
   if(getrlimit(RLIMIT_NOFILE,&old_lim)==0)
   {   printf("old limit->soft limit=%d\t","hard limit=%d\n",old_lim.rlim_cur,new_lim.rlim_max);
   }
   else
   {   fprintf(stderr,"%s\n",strerror(errno));
      lim.rlim_cur=3;
      lim.rlim_max=1024;
   }   
   if(setrlimit(RLIMIT_NOFILE,&lim)==-1)
   {    fprintf(stderr,"%s\n",strerror(errno));
   } 
   if(getrlimit(RLIMIT_NOFILE,&new_lim)==0)
   {    fprintf("New limits->soft limit=%d\t","hard limit=%d\n",new_lim.rlim_cur,new_lim.rlim_max);
   }    
   else
   {    fprintf(stderr,"%s\n",strerror(errno));
    }   
   return 0;
}
   
Q2
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

int main() {
    int filefd;

    filefd = open("output.txt", O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (filefd == -1) {
        perror("open");
        exit(EXIT_FAILURE);
    }
    if (dup2(filefd, STDOUT_FILENO) == -1) {
        perror("dup2");
        close(filefd);
        exit(EXIT_FAILURE);
    }

    close(filefd);
    printf("This message will be written to output.txt\n");
    printf("Another line redirected to output.txt\n");
    return 0;
}
