Q1
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int main(int argc, char *argv[]) {
    if (argc < 2) {
        fprintf(stderr, "Usage: %s <file1> <file2> ... <fileN>\n", argv[0]);
        exit(EXIT_FAILURE);
    }
    for (int i = 1; i < argc; i++) {
        if (access(argv[i], F_OK) == 0) {
            printf("File '%s' is present in the current directory.\n", argv[i]);
        } else {
            printf("File '%s' is not present in the current directory.\n", argv[i]);
        }
    }
    return 0;
}

Q2
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h>
#include<unistd.h>
#include<signal.h>

void sighup();
void sigint();
void sigquit();

void main()
{
  int pid;
  if((pid=fork())<0)
  {
     perror("error: In fork creating\n");
     exit(1);
  }
  if(pid==0)
  {
    signal(SIGHUP,sighup);   
    signal(SIGINT,sigint);   
    signal(SIGQUIT,sigquit);   
    sleep(2);
  }
  else
  {
    printf("\n parent: sending SIGHUP\n");
    sighup();
    kill(pid,SIGHUP); 
    sleep(3);
    
    printf("\n parent: sending SIGINT\n");
    sigint();
    kill(pid,SIGINT); 
    sleep(3);
    
    printf("\n parent: sending SIGQUIT\n");
    sigquit();
    kill(pid,SIGQUIT); 
    sleep(3); 
  }
}

void sighup()
{
  signal(SIGHUP,sighup);
  printf("child : & have rcevied a SIGHUP \n\n");
}

void sigint()
{
  signal(SIGINT,sigint);
  printf("child : & have rcevied a SIGINT \n\n");
}


void sigquit()
{
  signal(SIGQUIT,sigquit);
  printf("child : & have rcevied a SIGQUIT \n\n");
}
      
